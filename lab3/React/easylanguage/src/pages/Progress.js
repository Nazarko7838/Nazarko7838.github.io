import React, { useEffect, useState } from "react";
import ProgressChart from "../components/ProgressChart"; // –Ü–º–ø–æ—Ä—Ç—É–π –Ω–æ–≤–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
import {Helmet} from 'react-helmet';
import Config from '../Config.json';

const TITLE = "PROGRESS | " + Config.SITE_TITLE;
const DESC = "–í—ñ–¥—Å—Ç–µ–∂—É–π—Ç–µ —Å–≤—ñ–π –ø—Ä–æ–≥—Ä–µ—Å —É –≤–∏–≤—á–µ–Ω–Ω—ñ –º–æ–≤ –∑ Easy Language. –î–∏–≤—ñ—Ç—å—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è —Ç–∞ –≥—Ä–∞—Ñ—ñ–∫ –ø—Ä–æ–≥—Ä–µ—Å—É. –°–∫–∏–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å –∑–∞ –ø–æ—Ç—Ä–µ–±–∏.";
const CANONICAL = Config.SITE_DOMAIN + "/progress";

const languages = [
  { key: "english", label: "–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞" },
  { key: "german", label: "–ù—ñ–º–µ—Ü—å–∫–∞" },
  { key: "polish", label: "–ü–æ–ª—å—Å—å–∫–∞" },
  { key: "ukrainian", label: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞" },
];

const Progress = () => {
  const [selectedLanguage, setSelectedLanguage] = useState("english");
  const [progress, setProgress] = useState(() => JSON.parse(localStorage.getItem("lessonProgress")) || {});

  const lessonsCompleted = progress[selectedLanguage] ? Object.keys(progress[selectedLanguage]).length : 0;
  const totalLessons = Object.values(progress).reduce((sum, lang) => sum + Object.keys(lang).length, 0);

  const studyTimeMinutes = lessonsCompleted * 30;
  const hours = Math.floor(studyTimeMinutes / 60);
  const minutes = studyTimeMinutes % 60;

  let level = "A1";
  if (lessonsCompleted >= 1) level = "A2";
  if (lessonsCompleted >= 3) level = "B1";
  if (lessonsCompleted >= 5) level = "B2";
  if (lessonsCompleted >= 8) level = "C1";
  if (lessonsCompleted >= 10) level = "C2";

  const getAchievements = (totalLessons) => {
    const achievements = [];
    if (totalLessons >= 3) achievements.push("üèÜ –ü–æ—á–∞—Ç–∫—ñ–≤–µ—Ü—å ‚Äì –ó–∞–≤–µ—Ä—à–µ–Ω–æ 3 —É—Ä–æ–∫–∏");
    if (totalLessons >= 5) achievements.push("üéØ –°–µ—Ä–µ–¥–Ω—ñ–π —Ä—ñ–≤–µ–Ω—å ‚Äì 5+ —É—Ä–æ–∫—ñ–≤");
    if (totalLessons >= 10) achievements.push("üìö –î–æ—Å–≤—ñ–¥—á–µ–Ω–∏–π ‚Äì 10+ —É—Ä–æ–∫—ñ–≤");
    if (totalLessons >= 20) achievements.push("üí° –ú–∞–π—Å—Ç–µ—Ä ‚Äì 20+ —É—Ä–æ–∫—ñ–≤");
    if (totalLessons >= 30) achievements.push("üåç –ü–æ–ª—ñ–≥–ª–æ—Ç ‚Äì 30+ —É—Ä–æ–∫—ñ–≤");
    if (totalLessons >= 40) achievements.push("üöÄ –õ–µ–≥–µ–Ω–¥–∞ ‚Äì 40+ —É—Ä–æ–∫—ñ–≤");
    return achievements;
  };

  const resetProgress = () => {
    if (window.confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ —Å–∫–∏–Ω—É—Ç–∏ –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å?")) {
      localStorage.removeItem("lessonProgress");
      setProgress({});
      alert("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø—ñ—à–Ω–æ —Å–∫–∏–Ω—É—Ç–∞!");
    }
  };

  useEffect(() => {
    localStorage.setItem("lessonProgress", JSON.stringify(progress));
  }, [progress]);

  return (
    <main>
      <Helmet>
        <title>{TITLE}</title>
        <link rel="canonical" href={CANONICAL} />
        <meta name="description" content={DESC} />
      </Helmet>
      <section className="progress-container">
        <h1>–ú—ñ–π –ø—Ä–æ–≥—Ä–µ—Å</h1>

        <div className="language-selector">
          <label htmlFor="language">–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É:</label>
          <select
            id="language"
            value={selectedLanguage}
            onChange={(e) => setSelectedLanguage(e.target.value)}
          >
            {languages.map(lang => (
              <option key={lang.key} value={lang.key}>{lang.label}</option>
            ))}
          </select>
        </div>

        <div id="progress-content">
          <div className="stats">
            <h2>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–≤—á–∞–Ω–Ω—è</h2>
            <p>–ü—Ä–æ–π–¥–µ–Ω—ñ —É—Ä–æ–∫–∏: <strong>{lessonsCompleted}</strong></p>
            <p>–ß–∞—Å –Ω–∞–≤—á–∞–Ω–Ω—è: <strong>{hours} –≥–æ–¥ {minutes} —Ö–≤</strong></p>
            <p>–†—ñ–≤–µ–Ω—å –≤–æ–ª–æ–¥—ñ–Ω–Ω—è: <strong>{level}</strong></p>
          </div>

          <div className="progress-chart">
            <h2>–ì—Ä–∞—Ñ—ñ–∫ –ø—Ä–æ–≥—Ä–µ—Å—É</h2>
            <ProgressChart progress={progress} />
          </div>

          <div className="achievements">
            <h2>–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è</h2>
            <ul>
              {getAchievements(totalLessons).map((ach, i) => (
                <li key={i}>{ach}</li>
              ))}
            </ul>
          </div>
        </div>

        <div className="reset-progress">
          <button onClick={resetProgress}>–°–∫–∏–Ω—É—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</button>
        </div>
      </section>
    </main>
  );
};

export default Progress;
