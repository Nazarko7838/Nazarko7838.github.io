import React, { useState, useEffect } from "react";

const questions = [
    {
        question: "–í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç: 'She ___ to the store every day.'",
        options: ["go", "goes", "going"],
        answer: "goes",
        language: "–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞"
    },
    {
        question: "–í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É —Ñ–æ—Ä–º—É –∞—Ä—Ç–∏–∫–ª—è: 'Ich habe ___ Apfel.'",
        options: ["ein", "eine", "einen"],
        answer: "einen",
        language: "–ù—ñ–º–µ—Ü—å–∫–∞"
    },
    {
        question: "–Ø–∫–µ —Å–ª–æ–≤–æ –æ–∑–Ω–∞—á–∞—î '—Å—Ç—ñ–ª' –ø–æ–ª—å—Å—å–∫–æ—é –º–æ–≤–æ—é?",
        options: ["Krzes≈Ço", "St√≥≈Ç", "≈Å√≥≈ºko"],
        answer: "St√≥≈Ç",
        language: "–ü–æ–ª—å—Å—å–∫–∞"
    },
    {
        question: "–í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç: '–í–æ–Ω–∞ ___ –∫–Ω–∏–≥—É –∑–∞—Ä–∞–∑.'",
        options: ["—á–∏—Ç–∞—î", "—á–∏—Ç–∞—î—à", "—á–∏—Ç–∞—é"],
        answer: "—á–∏—Ç–∞—î",
        language: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"
    },
    {
        question: "–Ø–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–∫–∞–∑–∞—Ç–∏ '–Ø –º–∞—é —Å–æ–±–∞–∫—É' –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é?",
        options: ["I have a dog", "I has a dog", "I am have a dog"],
        answer: "I have a dog",
        language: "–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞"
    },
    {
        question: "–Ø–∫ —Å–∫–∞–∑–∞—Ç–∏ '–î–æ–±—Ä–∏–π –≤–µ—á—ñ—Ä' –Ω—ñ–º–µ—Ü—å–∫–æ—é?",
        options: ["Guten Morgen", "Guten Abend", "Gute Nacht"],
        answer: "Guten Abend",
        language: "–ù—ñ–º–µ—Ü—å–∫–∞"
    },
    {
        question: "–©–æ –æ–∑–Ω–∞—á–∞—î —Å–ª–æ–≤–æ 'dom' –ø–æ–ª—å—Å—å–∫–æ—é?",
        options: ["–ë—É–¥–∏–Ω–æ–∫", "–ú—ñ—Å—Ç–æ", "–°–µ–ª–æ"],
        answer: "–ë—É–¥–∏–Ω–æ–∫",
        language: "–ü–æ–ª—å—Å—å–∫–∞"
    },
    {
        question: "–í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç: '–í–æ–Ω–∏ ___ —É –ø–∞—Ä–∫—É –≤—á–æ—Ä–∞.'",
        options: ["–≥—É–ª—è—é—Ç—å", "–≥—É–ª—è–ª–∏", "–±—É–¥—É—Ç—å –≥—É–ª—è—Ç–∏"],
        answer: "–≥—É–ª—è–ª–∏",
        language: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"
    },
    {
        question: "–Ø–∫–µ —Å–ª–æ–≤–æ —î –∞–Ω—Ç–æ–Ω—ñ–º–æ–º –¥–æ '—Ç–µ–º–Ω–∏–π'?",
        options: ["—á–æ—Ä–Ω–∏–π", "—Å–≤—ñ—Ç–ª–∏–π", "—Å–∏–Ω—ñ–π"],
        answer: "—Å–≤—ñ—Ç–ª–∏–π",
        language: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"
    },
    {
        question: "–Ø–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞ —Ñ–æ—Ä–º–∞ —Å–ª–æ–≤–∞ —É –º–Ω–æ–∂–∏–Ω—ñ: '–¥–µ—Ä–µ–≤–æ'?",
        options: ["–¥–µ—Ä–µ–≤–∏", "–¥–µ—Ä–µ–≤–∞", "–¥–µ—Ä–µ–≤–∏—â–µ"],
        answer: "–¥–µ—Ä–µ–≤–∞",
        language: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"
    },
    {
        question: "–©–æ –æ–∑–Ω–∞—á–∞—î —Ñ—Ä–∞–∑–µ–æ–ª–æ–≥—ñ–∑–º '–≤–∏–ª—ñ–∑—Ç–∏ –Ω–∞ —Ä–æ–∂–µ–Ω'?",
        options: ["–¥–æ—Å—è–≥—Ç–∏ —É—Å–ø—ñ—Ö—É", "—Å–ø—Ä–æ–≤–æ–∫—É–≤–∞—Ç–∏ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç", "—Å—Ç–∞—Ç–∏ –ª—ñ–¥–µ—Ä–æ–º"],
        answer: "—Å–ø—Ä–æ–≤–æ–∫—É–≤–∞—Ç–∏ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç",
        language: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"
    }
];

function getRandomQuestion() {
    return questions[Math.floor(Math.random() * questions.length)];
}

export default function GrammarQuiz() {
    const [currentQuestion, setCurrentQuestion] = useState(getRandomQuestion());
    const [selectedAnswer, setSelectedAnswer] = useState("");

    const checkAnswer = () => {
        if (!selectedAnswer) {
            alert("–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å!");
            return;
        }

        if (selectedAnswer === currentQuestion.answer) {
            alert("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!");
        } else {
            alert("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: " + currentQuestion.answer);
        }

        setCurrentQuestion(getRandomQuestion());
        setSelectedAnswer("");
    };

    return (
        <div className="test-section">
            <h2>üìù –¢–µ—Å—Ç: –û—Å–Ω–æ–≤–∏ –≥—Ä–∞–º–∞—Ç–∏–∫–∏</h2>
            <p>{currentQuestion.language}: {currentQuestion.question}</p>
            {currentQuestion.options.map((option, index) => (
                <label key={index}>
                    <input
                        type="radio"
                        name="quiz"
                        value={option}
                        checked={selectedAnswer === option}
                        onChange={(e) => setSelectedAnswer(e.target.value)}
                    />
                    {" "}{option}
                    <br />
                </label>
            ))}
            <button onClick={checkAnswer}>–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏</button>
        </div>
    );
}
